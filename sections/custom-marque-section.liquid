{%  style  %}
   .custom-marquee .in-wrapper:not(.cloned) {
        -webkit-animation: MarqueeRight {{ section.settings.marqee_duration }}s linear infinite 0ms;
        animation: MarqueeRight {{ section.settings.marqee_duration }}s linear infinite 0ms;
    }

{% endstyle %}
<div class="row">
    <div class="wrapper">
        {% liquid
            assign marqee_dir = section.settings.marque_direct
            case marqee_dir
            when 'right-to-left'
            assign marqee_dir = "right-to-left"
            else
            assign marqee_dir = "left-to-right"
            endcase
            %}
        <div class="in-wrapper {{ marqee_dir }}">
            
            {% for block in section.blocks %}
            {%- case block.type -%}
            {%- when 'image' -%}
            <div class="content-item">
                <div class="content-item-wrapper">
                    <img src="{{ block.settings.image | image_url }}" alt="{{ product.title }}" width="100%"
                        height="100%">
                </div>
            </div>
            {%- when 'text' -%}
            <div class="content-item">
                <div class="content-item-wrapper">
                    <h2> {{ block.settings.marque_text }}</h2>
                </div>
            </div>
            {% else %}
            {%- when 'logo' -%}
            <div class="content-item">
                <div class="content-item-wrapper">
                    <h2> {{ block.settings.svg-logo }}</h2>
                </div>
            </div>
            {% endcase %}
            {% endfor %}
        </div>
    </div>
</div>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        let totalWidth = 0;
        const contentItems = document.querySelectorAll(".content-item");

        contentItems.forEach(item => {
            totalWidth += item.offsetWidth; // Get each content-item's width and sum it
        });

        const inWrapper = document.querySelector(".in-wrapper");

        // Set the total width as a CSS variable on .in-wrapper
        inWrapper.style.setProperty("--total-width", totalWidth + "px");

        // Clone the .in-wrapper
        const clonedWrapper = inWrapper.cloneNode(true); // true = deep clone with children
        clonedWrapper.classList.add("cloned"); // Add the "cloned" class

        // Append the cloned element to .wrapper
        document.querySelector(".wrapper").appendChild(clonedWrapper);
    });
</script>


<style>
    .custom-marquee .wrapper {
        position: relative;
        display: flex;
        flex-flow: row nowrap;
        overflow: hidden;
    }

    .custom-marquee .in-wrapper {
        width: 100%;
        flex: 0 0 auto;
        display: grid;
        grid-auto-flow: column;
        align-items: center;
    }

    .custom-marquee .content-item {
        display: flex;
        justify-content: center;
        width: 100%;
    }

 

    @keyframes MarqueeRight {
        from {
            margin-left: var(--total-width);

            to {
                margin-left: 0
            }
        }
    }
</style>

{% schema %}
{
"name": "Custom Marquee Section",
"tag": "section",
"class": "custom-marquee",
"settings": [
{
"type": "select",
"id": "marque_direct",
"options": [
{
"value": "left-to-right",
"label": "Left To Right"
},
{
"value": "right-to-left",
"label": "Right To Left"
}
],
"default": "left-to-right",
"label": "Marque Direction"
},
{
    "type": "number",
    "id": "marqee_duration",
    "default": 30,
    "label": "Marqee Duration in sec"
}
],
"blocks": [
{
"type": "image",
"name": "Image",
"settings": [
{
"type": "image_picker",
"id": "image",
"label": "Image"
}
]
},
{
"type": "logo",
"name": "SVG Logo",
"settings": [
{
"type": "html",
"id": "svg-logo",
"label": "Logo"
}
]
},
{
"type": "text",
"name": "Text",
"settings": [
{
"type": "text",
"id": "marque_text",
"label": "Logo"
}
]
}
],
"presets": [
{
"name": "Custom Marquee Section"
}
]
}
{% endschema %}